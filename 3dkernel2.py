from mpl_toolkits.mplot3d import Axes3D  # noqa: F401 unused import

import matplotlib.pyplot as plt
import numpy as np


def f(t):
    return np.cos(2*np.pi*t) * np.exp(-t)

data = [[-0.5483870967741931, 1.0822510822510827, 1], [-0.67741935483871, 0.9307359307359313, 1], [-0.849462365591398, 0.562770562770563, 1], [-1.021505376344086, -0.5411255411255409, 1], [-0.5913978494623651, -0.9740259740259738, 1], [0.763440860215054, -1.3636363636363633, 1], [1.559139784946236, -1.2770562770562766, 1], [1.7096774193548399, -0.4978354978354975, 1], [1.43010752688172, 0.25974025974026027, 1], [0.956989247311828, 0.6926406926406932, 1], [0.78494623655914, 1.1688311688311694, 1], [0.2688172043010759, 1.233766233766234, 1], [-2.935483870967742, 1.9696969696969697, -1], [-2.075268817204301, 2.5974025974025983, -1], [-0.11827956989247301, 2.9437229437229435, -1], [1.580645161290322, 2.987012987012988, -1], [2.655913978494624, 2.6190476190476195, -1], [3.666666666666668, 1.7965367965367962, -1], [3.860215053763442, 0.670995670995671, -1], [3.881720430107528, -0.19480519480519476, -1], [3.537634408602152, -1.2554112554112553, -1], [3.064516129032258, -1.991341991341991, -1], [2.376344086021506, -2.7489177489177483, -1], [1.580645161290322, -2.9220779220779214, -1], [0.41935483870967794, -2.943722943722943, -1], [-0.5913978494623651, -2.8787878787878785, -1], [-1.559139784946236, -2.3593073593073592, -1], [-2.290322580645161, -1.8181818181818175, -1], [-2.806451612903226, -1.2987012987012987, -1], [-3.3440860215053765, -0.17316017316017263, -1], [-3.172043010752688, 0.8658008658008658, -1], [-3.0, 1.0389610389610393, -1]]

# Set up a figure twice as tall as it is wide
fig = plt.figure(figsize=plt.figaspect(2.))
fig.suptitle('A tale of 2 subplots')

# First subplot
ax = fig.add_subplot(2, 1, 1)

t1 = np.arange(0.0, 5.0, 0.1)
t2 = np.arange(0.0, 5.0, 0.02)
t3 = np.arange(0.0, 2.0, 0.01)

ax.plot([x[0] for x in data if x[2] == -1], [x[1] for x in data if x[2] == -1],  'rs',  label='line 2',marker="o")
ax.plot([x[0] for x in data if x[2] == 1], [x[1] for x in data if x[2] == 1], 'rs',  label='line 2',marker="P",color="green")
ax.grid(True)
ax.set_ylabel('Damped oscillation')

# Second subplot
ax = fig.add_subplot(2, 1, 2, projection='3d')

X = np.arange(-5, 5, 0.25)
Y = np.arange(-5, 5, 0.25)
X, Y = np.meshgrid(X, Y)
R = np.sqrt(X**2 + Y**2)
Z = np.sin(R)

X = np.array([x[0]*x[0] for x in data if x[2] == -1])
Y = np.array([x[1]*x[1] for x in data if x[2] == -1])
Z = np.array([1.414*x[0]*x[1] for x in data if x[2] == -1])
surf = ax.scatter(X,Y ,Z ,'rs',  label='line 2',marker="o",color="red")
X1 = np.array([x[0]*x[0] for x in data if x[2] == 1])
Y1 = np.array([x[1]*x[1] for x in data if x[2] == 1])
Z1 = np.array([1.414*x[0]*x[1] for x in data if x[2] == 1])


ax.scatter(X1,Y1 ,Z1 ,'rs',  label='line 2',marker="P",color="green")


plt.show()